// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type PhotoType string

const (
	PhotoTypePhoto  PhotoType = "PHOTO"
	PhotoTypeAvatar PhotoType = "AVATAR"
	PhotoTypeBanner PhotoType = "BANNER"
)

var AllPhotoType = []PhotoType{
	PhotoTypePhoto,
	PhotoTypeAvatar,
	PhotoTypeBanner,
}

func (e PhotoType) IsValid() bool {
	switch e {
	case PhotoTypePhoto, PhotoTypeAvatar, PhotoTypeBanner:
		return true
	}
	return false
}

func (e PhotoType) String() string {
	return string(e)
}

func (e *PhotoType) UnmarshalGQL(v any) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = PhotoType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid PhotoType", str)
	}
	return nil
}

func (e PhotoType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
